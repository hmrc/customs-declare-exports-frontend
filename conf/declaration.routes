
# Standard or other journey Choice Page

GET         /standard-or-other                  controllers.declaration.StandardOrOtherJourneyController.displayPage

POST        /standard-or-other                  controllers.declaration.StandardOrOtherJourneyController.submitChoice

# Declaration Choice Page

GET         /declaration-choice                 controllers.declaration.DeclarationChoiceController.displayPage

POST        /declaration-choice                 controllers.declaration.DeclarationChoiceController.submitChoice

# Declaration type

GET         /type                                controllers.declaration.AdditionalDeclarationTypeController.displayPage

POST        /type                                controllers.declaration.AdditionalDeclarationTypeController.submitForm

# Declarant EORI

GET         /declarant-details                   controllers.declaration.DeclarantDetailsController.displayPage

POST        /declarant-details                   controllers.declaration.DeclarantDetailsController.submitForm

# Not Eligible

GET         /not-eligible                       controllers.declaration.NotEligibleController.displayNotEligible

GET         /not-declarant                      controllers.declaration.NotEligibleController.displayNotDeclarant

# DUCR Choice

GET         /do-you-have-ducr                    controllers.declaration.DucrChoiceController.displayPage

POST        /do-you-have-ducr                    controllers.declaration.DucrChoiceController.submitForm

# DUCR

GET         /ducr-entry                          controllers.declaration.DucrEntryController.displayPage

POST        /ducr-entry                          controllers.declaration.DucrEntryController.submitForm

# LRN

GET         /local-reference-number              controllers.declaration.LocalReferenceNumberController.displayPage

POST        /local-reference-number              controllers.declaration.LocalReferenceNumberController.submitForm

# Trader reference

GET         /trader-reference                   controllers.declaration.TraderReferenceController.displayPage

POST        /trader-reference                   controllers.declaration.TraderReferenceController.submitForm

# Confirm DUCR

GET         /confirm-ducr                       controllers.declaration.ConfirmDucrController.displayPage

POST        /confirm-ducr                       controllers.declaration.ConfirmDucrController.submitForm

# Consignment references

GET         /consignment-references              controllers.declaration.ConsignmentReferencesController.displayPage

POST        /consignment-references              controllers.declaration.ConsignmentReferencesController.submitForm

# MUCR

GET         /link-to-mucr                        controllers.declaration.LinkDucrToMucrController.displayPage

POST        /link-to-mucr                        controllers.declaration.LinkDucrToMucrController.submitForm

GET         /enter-a-mucr                        controllers.declaration.MucrController.displayPage

POST        /enter-a-mucr                        controllers.declaration.MucrController.submitForm

# Entry into Declarant records (Clearance journey)

GET         /entry-into-declarants-records       controllers.declaration.EntryIntoDeclarantsRecordsController.displayPage

POST        /entry-into-declarants-records       controllers.declaration.EntryIntoDeclarantsRecordsController.submitForm

# Person presenting goods (Clearance journey)

GET         /person-presenting-goods             controllers.declaration.PersonPresentingGoodsDetailsController.displayPage

POST        /person-presenting-goods             controllers.declaration.PersonPresentingGoodsDetailsController.submitForm

# Declarant is exporter

GET         /are-you-the-exporter                controllers.declaration.DeclarantExporterController.displayPage

POST        /are-you-the-exporter                controllers.declaration.DeclarantExporterController.submitForm

# Declarant is not the exporter - Exporter EORI (if known)

GET         /exporter-eori-number                controllers.declaration.ExporterEoriNumberController.displayPage

POST        /exporter-eori-number                controllers.declaration.ExporterEoriNumberController.submit

# Declarant is not the exporter - Exporter address (EORI is not known)

GET         /exporter-address                    controllers.declaration.ExporterDetailsController.displayPage

POST        /exporter-address                    controllers.declaration.ExporterDetailsController.saveAddress

# EXS Declaration (Clearance journey)

GET         /is-this-exs                         controllers.declaration.IsExsController.displayPage

POST        /is-this-exs                         controllers.declaration.IsExsController.submit

# Consignor Eori Number (Clearance journey)

GET         /consignor-eori-number               controllers.declaration.ConsignorEoriNumberController.displayPage

POST        /consignor-eori-number               controllers.declaration.ConsignorEoriNumberController.submit

# Consignor address (Clearance journey)

GET         /consignor-address                   controllers.declaration.ConsignorDetailsController.displayPage

POST        /consignor-address                   controllers.declaration.ConsignorDetailsController.saveAddress

# Declarant is not the exporter - Representative details

GET         /are-you-completing-this-declaration-on-behalf-of-another-agent  controllers.declaration.RepresentativeAgentController.displayPage

POST        /are-you-completing-this-declaration-on-behalf-of-another-agent  controllers.declaration.RepresentativeAgentController.submitForm

# Declarant is not the exporter - Representative EORI (if known)

GET         /representatives-eori-number         controllers.declaration.RepresentativeEntityController.displayPage

POST        /representatives-eori-number         controllers.declaration.RepresentativeEntityController.submitForm

# Declarant is not the exporter - Representative type (EORI not known)

GET         /representation-type-agreed          controllers.declaration.RepresentativeStatusController.displayPage

POST        /representation-type-agreed          controllers.declaration.RepresentativeStatusController.submitForm

# Third Party Goods Transportation

GET         /third-party-goods-transportation    controllers.declaration.ThirdPartyGoodsTransportationController.displayPage

POST        /third-party-goods-transportation    controllers.declaration.ThirdPartyGoodsTransportationController.submitPage

# Carrier Eori Number (if known)

GET         /carrier-eori-number                 controllers.declaration.CarrierEoriNumberController.displayPage

POST        /carrier-eori-number                 controllers.declaration.CarrierEoriNumberController.submit

# Carrier details (Carrier's EORI not known)

GET         /carrier-address                     controllers.declaration.CarrierDetailsController.displayPage

POST        /carrier-address                     controllers.declaration.CarrierDetailsController.saveAddress

# Consignee details

GET         /consignee-details                   controllers.declaration.ConsigneeDetailsController.displayPage

POST        /consignee-details                   controllers.declaration.ConsigneeDetailsController.saveAddress

# Declaration other parties

GET         /other-parties-involved              controllers.declaration.AdditionalActorsAddController.displayPage

POST        /other-parties-involved              controllers.declaration.AdditionalActorsAddController.saveForm

GET         /other-parties-list                  controllers.declaration.AdditionalActorsSummaryController.displayPage

POST        /other-parties-list                  controllers.declaration.AdditionalActorsSummaryController.submitForm

GET         /other-party/:id/remove              controllers.declaration.AdditionalActorsRemoveController.displayPage(id: String)

POST        /other-party/:id/remove              controllers.declaration.AdditionalActorsRemoveController.submitForm(id: String)

# Declaration holder of authorisation

GET         /authorisation-choice                controllers.declaration.AuthorisationProcedureCodeChoiceController.displayPage

POST        /authorisation-choice                controllers.declaration.AuthorisationProcedureCodeChoiceController.submitForm

GET         /is-authorisation-required           controllers.declaration.AuthorisationHolderRequiredController.displayPage

POST        /is-authorisation-required           controllers.declaration.AuthorisationHolderRequiredController.submitForm

GET         /add-authorisation-required          controllers.declaration.AuthorisationHolderAddController.displayPage

POST        /add-authorisation-required          controllers.declaration.AuthorisationHolderAddController.submitForm

GET         /authorisations-required             controllers.declaration.AuthorisationHolderSummaryController.displayPage

POST        /authorisations-required             controllers.declaration.AuthorisationHolderSummaryController.submitForm

GET         /authorisations-required/:id/change  controllers.declaration.AuthorisationHolderChangeController.displayPage(id: String)

POST        /authorisations-required/:id/change  controllers.declaration.AuthorisationHolderChangeController.submitForm(id: String)

GET         /authorisations-required/:id/remove  controllers.declaration.AuthorisationHolderRemoveController.displayPage(id: String)

POST        /authorisations-required/:id/remove  controllers.declaration.AuthorisationHolderRemoveController.submitForm(id: String)

# Destination country

GET         /destination-country                 controllers.declaration.DestinationCountryController.displayPage

POST        /destination-country                 controllers.declaration.DestinationCountryController.submit

# Routing countries

GET         /country-of-routing                  controllers.declaration.RoutingCountriesController.displayRoutingQuestion

POST        /country-of-routing                  controllers.declaration.RoutingCountriesController.submitRoutingAnswer

GET         /countries-of-routing                controllers.declaration.RoutingCountriesController.displayRoutingCountry

POST        /countries-of-routing                controllers.declaration.RoutingCountriesController.submitRoutingCountry

# Location of goods

GET         /location-of-goods                   controllers.declaration.LocationOfGoodsController.displayPage

POST        /location-of-goods                   controllers.declaration.LocationOfGoodsController.saveLocation

# Office of exit

GET         /office-of-exit                      controllers.declaration.OfficeOfExitController.displayPage

POST        /office-of-exit                      controllers.declaration.OfficeOfExitController.saveOffice

# Invoices & Exchange Rate

GET         /invoices-and-exchange-rate-choice   controllers.declaration.InvoiceAndExchangeRateChoiceController.displayPage

POST        /invoices-and-exchange-rate-choice   controllers.declaration.InvoiceAndExchangeRateChoiceController.submitForm

GET         /invoices-and-exchange-rate          controllers.declaration.InvoiceAndExchangeRateController.displayPage

POST        /invoices-and-exchange-rate          controllers.declaration.InvoiceAndExchangeRateController.saveNoOfItems

# Total package quantity

GET         /total-package-quantity              controllers.declaration.TotalPackageQuantityController.displayPage

POST        /total-package-quantity              controllers.declaration.TotalPackageQuantityController.saveTotalPackageQuantity


# Previous documents

GET         /add-previous-document               controllers.declaration.PreviousDocumentsController.displayPage

POST        /add-previous-document               controllers.declaration.PreviousDocumentsController.submit

GET         /previous-documents-list             controllers.declaration.PreviousDocumentsSummaryController.displayPage

POST        /previous-documents-list             controllers.declaration.PreviousDocumentsSummaryController.submit

GET         /previous-documents/:id/remove       controllers.declaration.PreviousDocumentsRemoveController.displayPage(id: String)

POST        /previous-documents/:id/remove       controllers.declaration.PreviousDocumentsRemoveController.submit(id: String)

GET         /previous-documents/:id/change       controllers.declaration.PreviousDocumentsChangeController.displayPage(id: String)

POST        /previous-documents/:id/change       controllers.declaration.PreviousDocumentsChangeController.submit(id: String)

# Transaction type

GET         /nature-of-transaction               controllers.declaration.NatureOfTransactionController.displayPage

POST        /nature-of-transaction               controllers.declaration.NatureOfTransactionController.saveTransactionType


# **** ITEMS PAGES *****

# Items Summary

GET         /add-declaration-item                controllers.declaration.ItemsSummaryController.displayAddItemPage

POST        /add-declaration-item                controllers.declaration.ItemsSummaryController.addFirstItem

# Only reached by the CYA page
GET         /add-additional-item                 controllers.declaration.ItemsSummaryController.addAdditionalItem

GET         /declaration-items-list              controllers.declaration.ItemsSummaryController.displayItemsSummaryPage

POST        /declaration-items-list              controllers.declaration.ItemsSummaryController.submit

GET         /remove-declaration-item/:itemId    controllers.declaration.RemoveItemsSummaryController.displayRemoveItemConfirmationPage(itemId)

POST        /remove-declaration-item/:itemId    controllers.declaration.RemoveItemsSummaryController.removeItem(itemId, redirectUrl: RedirectUrl)

# Procedure Codes

GET         /items/:itemId/procedure-codes        controllers.declaration.ProcedureCodesController.displayPage(itemId)

POST        /items/:itemId/procedure-codes        controllers.declaration.ProcedureCodesController.submitProcedureCodes(itemId)

# Additional Procedure Codes

GET         /items/:itemId/additional-procedure-codes        controllers.declaration.AdditionalProcedureCodesController.displayPage(itemId)

POST        /items/:itemId/additional-procedure-codes        controllers.declaration.AdditionalProcedureCodesController.submitAdditionalProcedureCodes(itemId)

# Fiscal Information

GET         /items/:itemId/fiscal-information    controllers.declaration.FiscalInformationController.displayPage(itemId, fastForward: Boolean ?= false)

POST        /items/:itemId/fiscal-information   controllers.declaration.FiscalInformationController.saveFiscalInformation(itemId)


# Additional Fiscal References

GET         /items/:itemId/additional-fiscal-references-list        controllers.declaration.AdditionalFiscalReferencesController.displayPage(itemId)

POST        /items/:itemId/additional-fiscal-references-list        controllers.declaration.AdditionalFiscalReferencesController.submitForm(itemId)

GET         /items/:itemId/additional-fiscal-references             controllers.declaration.AdditionalFiscalReferencesAddController.displayPage(itemId)

POST        /items/:itemId/additional-fiscal-references             controllers.declaration.AdditionalFiscalReferencesAddController.submitForm(itemId)

GET         /items/:itemId/additional-fiscal-references/:id/remove   controllers.declaration.AdditionalFiscalReferencesRemoveController.displayPage(itemId, id)

POST        /items/:itemId/additional-fiscal-references/:id/remove   controllers.declaration.AdditionalFiscalReferencesRemoveController.submitForm(itemId, id)

# Commodity Details

GET         /items/:itemId/commodity-details                   controllers.declaration.CommodityDetailsController.displayPage(itemId)

POST        /items/:itemId/commodity-details                   controllers.declaration.CommodityDetailsController.submitForm(itemId)

# UN Dangerous Goods Code

GET         /items/:itemId/un-dangerous-goods-code             controllers.declaration.UNDangerousGoodsCodeController.displayPage(itemId)

POST        /items/:itemId/un-dangerous-goods-code             controllers.declaration.UNDangerousGoodsCodeController.submitForm(itemId)

# CUS Code

GET         /items/:itemId/cus-code                            controllers.declaration.CusCodeController.displayPage(itemId)

POST        /items/:itemId/cus-code                            controllers.declaration.CusCodeController.submitForm(itemId)

# NACT Code

GET         /items/:itemId/vat-rating                          controllers.declaration.ZeroRatedForVatController.displayPage(itemId)

POST        /items/:itemId/vat-rating                          controllers.declaration.ZeroRatedForVatController.submitForm(itemId)

GET         /items/:itemId/national-additional-code            controllers.declaration.NactCodeAddController.displayPage(itemId)

POST        /items/:itemId/national-additional-code            controllers.declaration.NactCodeAddController.submitForm(itemId)

GET         /items/:itemId/national-additional-codes-list      controllers.declaration.NactCodeSummaryController.displayPage(itemId)

POST        /items/:itemId/national-additional-codes-list      controllers.declaration.NactCodeSummaryController.submitForm(itemId)

GET         /items/:itemId/national-additional-code/:code/remove            controllers.declaration.NactCodeRemoveController.displayPage(itemId, code)

POST        /items/:itemId/national-additional-code/:code/remove            controllers.declaration.NactCodeRemoveController.submitForm(itemId, code)

# Statistical Value

GET         /items/:itemId/statistical-value                   controllers.declaration.StatisticalValueController.displayPage(itemId)

POST        /items/:itemId/statistical-value                   controllers.declaration.StatisticalValueController.submitItemType(itemId)

# Package Information

GET         /items/:itemId/package-information                 controllers.declaration.PackageInformationAddController.displayPage(itemId)

POST        /items/:itemId/package-information                 controllers.declaration.PackageInformationAddController.submitForm(itemId)

GET         /items/:itemId/packages-list                       controllers.declaration.PackageInformationSummaryController.displayPage(itemId)

POST        /items/:itemId/packages-list                       controllers.declaration.PackageInformationSummaryController.submitForm(itemId)

GET         /items/:itemId/package-information/:code/remove    controllers.declaration.PackageInformationRemoveController.displayPage(itemId, code)

POST        /items/:itemId/package-information/:code/remove    controllers.declaration.PackageInformationRemoveController.submitForm(itemId, code)

GET         /items/:itemId/package-information/:code/change    controllers.declaration.PackageInformationChangeController.displayPage(itemId, code)

POST        /items/:itemId/package-information/:code/change    controllers.declaration.PackageInformationChangeController.submitForm(itemId, code)

# Commodity Measure Information

GET         /items/:itemId/commodity-measure                   controllers.declaration.CommodityMeasureController.displayPage(itemId)

POST        /items/:itemId/commodity-measure                   controllers.declaration.CommodityMeasureController.submitPage(itemId)

GET         /items/:itemId/supplementary-units                 controllers.declaration.SupplementaryUnitsController.displayPage(itemId)

POST        /items/:itemId/supplementary-units                 controllers.declaration.SupplementaryUnitsController.submitPage(itemId)

# Additional information

GET         /items/:itemId/is-additional-information-required  controllers.declaration.AdditionalInformationRequiredController.displayPage(itemId)

POST        /items/:itemId/is-additional-information-required  controllers.declaration.AdditionalInformationRequiredController.submitForm(itemId)

GET         /items/:itemId/additional-information              controllers.declaration.AdditionalInformationAddController.displayPage(itemId)

POST        /items/:itemId/additional-information              controllers.declaration.AdditionalInformationAddController.submitForm(itemId)

GET         /items/:itemId/additional-information/:id/remove   controllers.declaration.AdditionalInformationRemoveController.displayPage(itemId, id)

POST        /items/:itemId/additional-information/:id/remove   controllers.declaration.AdditionalInformationRemoveController.submitForm(itemId, id)

GET         /items/:itemId/additional-information/:id/change   controllers.declaration.AdditionalInformationChangeController.displayPage(itemId, id)

POST        /items/:itemId/additional-information/:id/change   controllers.declaration.AdditionalInformationChangeController.submitForm(itemId, id)

GET         /items/:itemId/additional-information-list         controllers.declaration.AdditionalInformationController.displayPage(itemId)

POST        /items/:itemId/additional-information-list         controllers.declaration.AdditionalInformationController.submitForm(itemId)

GET         /items/:itemId/is-licence-required                 controllers.declaration.IsLicenceRequiredController.displayPage(itemId)

POST        /items/:itemId/is-licence-required                 controllers.declaration.IsLicenceRequiredController.submitForm(itemId)

# Additional Documents

GET         /items/:itemId/is-additional-documentation-required controllers.declaration.AdditionalDocumentsRequiredController.displayPage(itemId)

POST        /items/:itemId/is-additional-documentation-required controllers.declaration.AdditionalDocumentsRequiredController.submitForm(itemId)

GET         /items/:itemId/additional-documentation             controllers.declaration.AdditionalDocumentAddController.displayPage(itemId)

POST        /items/:itemId/additional-documentation             controllers.declaration.AdditionalDocumentAddController.submitForm(itemId)

GET         /items/:itemId/additional-documentation/:id/remove  controllers.declaration.AdditionalDocumentRemoveController.displayPage(itemId, id)

POST        /items/:itemId/additional-documentation/:id/remove  controllers.declaration.AdditionalDocumentRemoveController.submitForm(itemId, id)

GET         /items/:itemId/additional-documentation/:id/change  controllers.declaration.AdditionalDocumentChangeController.displayPage(itemId, id)

POST        /items/:itemId/additional-documentation/:id/change  controllers.declaration.AdditionalDocumentChangeController.submitForm(itemId, id)

GET         /items/:itemId/additional-documentation-list        controllers.declaration.AdditionalDocumentsController.displayPage(itemId)

POST        /items/:itemId/additional-documentation-list        controllers.declaration.AdditionalDocumentsController.submitForm(itemId)

# **** END OF ITEM PAGES ****

# Transport leaving the border

GET         /transport-leaving-the-border       controllers.declaration.TransportLeavingTheBorderController.displayPage

POST        /transport-leaving-the-border       controllers.declaration.TransportLeavingTheBorderController.submitForm

# Identification of a Warehouse

GET         /warehouse-details                   controllers.declaration.WarehouseIdentificationController.displayPage

POST        /warehouse-details                   controllers.declaration.WarehouseIdentificationController.saveIdentificationNumber

# Supervising Customs Office

GET         /supervising-customs-office          controllers.declaration.SupervisingCustomsOfficeController.displayPage

POST        /supervising-customs-office          controllers.declaration.SupervisingCustomsOfficeController.submit

# UK border or Inland (Customs controlled locations)

GET         /inland-or-border                    controllers.declaration.InlandOrBorderController.displayPage

POST        /inland-or-border                    controllers.declaration.InlandOrBorderController.submitPage

# Inland Transport Details

GET         /inland-transport-details            controllers.declaration.InlandTransportDetailsController.displayPage

POST        /inland-transport-details            controllers.declaration.InlandTransportDetailsController.submit

# Departure Transport

GET         /departure-transport                controllers.declaration.DepartureTransportController.displayPage

POST        /departure-transport                controllers.declaration.DepartureTransportController.submitForm

# Border Transport

GET         /border-transport                   controllers.declaration.BorderTransportController.displayPage

POST        /border-transport                   controllers.declaration.BorderTransportController.submitForm

GET         /transport-country                  controllers.declaration.TransportCountryController.displayPage

POST        /transport-country                  controllers.declaration.TransportCountryController.submitForm

# Transport Payment

GET         /express-consignment                 controllers.declaration.ExpressConsignmentController.displayPage

POST        /express-consignment                 controllers.declaration.ExpressConsignmentController.submitForm

GET         /transport-payment                   controllers.declaration.TransportPaymentController.displayPage

POST        /transport-payment                   controllers.declaration.TransportPaymentController.submitForm

# Transport Containers & Seals

GET         /containers                          controllers.declaration.TransportContainerController.displayContainerSummary

POST        /containers                          controllers.declaration.TransportContainerController.submitSummaryAction

GET         /container                           controllers.declaration.TransportContainerController.displayAddContainer

POST        /container                           controllers.declaration.TransportContainerController.submitAddContainer

GET         /containers/:containerId/remove      controllers.declaration.TransportContainerController.displayContainerRemove(containerId)

POST        /containers/:containerId/remove      controllers.declaration.TransportContainerController.submitContainerRemove(containerId)

GET         /containers/:containerId/seals       controllers.declaration.SealController.displaySealSummary(containerId)

POST        /containers/:containerId/seals       controllers.declaration.SealController.submitSummaryAction(containerId)

GET         /containers/:containerId/add-seal    controllers.declaration.SealController.displayAddSeal(containerId)

POST        /containers/:containerId/add-seal    controllers.declaration.SealController.submitAddSeal(containerId)

GET         /containers/:containerId/seals/:sealId/remove    controllers.declaration.SealController.displaySealRemove(containerId, sealId)

POST        /containers/:containerId/seals/:sealId/remove    controllers.declaration.SealController.submitSealRemove(containerId, sealId)

# Summary

GET         /saved-summary                       controllers.declaration.SummaryController.displayPage

GET         /saved-summary-no-items              controllers.declaration.SummaryController.displayPageOnNoItems

GET         /summary-section/:section            controllers.declaration.SectionSummaryController.displayPage(section: Int)

# Submission

GET         /submit-your-declaration             controllers.declaration.SubmissionController.displaySubmitDeclarationPage

POST        /submit-your-declaration             controllers.declaration.SubmissionController.submitDeclaration

GET         /submit-your-amendment               controllers.declaration.SubmissionController.displaySubmitAmendmentPage

GET         /resubmit-your-amendment             controllers.declaration.SubmissionController.displayResubmitAmendmentPage

POST        /submit-your-amendment               controllers.declaration.SubmissionController.submitAmendment(amendmentAction: String)

GET         /cancel-amendment                    controllers.declaration.SubmissionController.cancelAmendment

GET         /cancel-your-amendment               controllers.declaration.SubmissionController.displayCancelAmendmentPage

POST        /cancel-your-amendment               controllers.declaration.SubmissionController.submitAmendment(amendmentAction: String = "Cancellation")

# Amendment declaration

GET         /amend-declaration/:parentId/:enhancedStatus  controllers.declaration.amendments.AmendDeclarationController.initAmendment(parentId: String, enhancedStatus: String)

GET         /amendment-details/:actionId         controllers.declaration.amendments.AmendmentDetailsController.displayPage(actionId: String)

# Confirmation

GET         /holding                             controllers.declaration.ConfirmationController.displayHoldingPage

GET         /confirmation                        controllers.declaration.ConfirmationController.displayConfirmationPage

GET         /amendment-holding                   controllers.declaration.amendments.AmendmentOutcomeController.displayHoldingPage(isCancellation: Boolean)

GET         /amendment-outcome                   controllers.declaration.amendments.AmendmentOutcomeController.displayOutcomePage

# Others

GET         /draft-saved                         controllers.declaration.DraftDeclarationController.displayPage