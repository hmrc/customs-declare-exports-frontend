
# Declaration Choice Page

GET         /declaration-choice                 controllers.declaration.DeclarationChoiceController.displayPage(mode: models.Mode ?= models.Mode.Normal)

POST        /declaration-choice                 controllers.declaration.DeclarationChoiceController.submitChoice(mode: models.Mode ?= models.Mode.Normal)

# Declaration type

GET         /dispatch-location                   controllers.declaration.DispatchLocationController.displayPage(mode: models.Mode ?= models.Mode.Normal)

POST        /dispatch-location                   controllers.declaration.DispatchLocationController.submitForm(mode: models.Mode ?= models.Mode.Normal)

GET         /type                                controllers.declaration.AdditionalDeclarationTypeController.displayPage(mode: models.Mode ?= models.Mode.Normal)

POST        /type                                controllers.declaration.AdditionalDeclarationTypeController.submitForm(mode: models.Mode ?= models.Mode.Normal)

# Not Eligible

GET         /not-eligible                       controllers.declaration.NotEligibleController.displayNotEligible()

GET         /not-declarant                      controllers.declaration.NotEligibleController.displayNotDeclarant()

# Consignment references

GET         /consignment-references              controllers.declaration.ConsignmentReferencesController.displayPage(mode: models.Mode ?= models.Mode.Normal)

POST        /consignment-references              controllers.declaration.ConsignmentReferencesController.submitConsignmentReferences(mode: models.Mode ?= models.Mode.Normal)

# Exporter address

GET         /exporter-details                    controllers.declaration.ExporterDetailsController.displayPage(mode: models.Mode ?= models.Mode.Normal)

POST        /exporter-details                    controllers.declaration.ExporterDetailsController.saveAddress(mode: models.Mode ?= models.Mode.Normal)

# Declarant address

GET         /declarant-details                   controllers.declaration.DeclarantDetailsController.displayPage(mode: models.Mode ?= models.Mode.Normal)

POST        /declarant-details                   controllers.declaration.DeclarantDetailsController.submitForm(mode: models.Mode ?= models.Mode.Normal)

# Representative details

GET         /representative-details              controllers.declaration.RepresentativeDetailsController.displayPage(mode: models.Mode ?= models.Mode.Normal)

POST        /representative-details              controllers.declaration.RepresentativeDetailsController.submitForm(mode: models.Mode ?= models.Mode.Normal)

# Consignee details

GET         /consignee-details                   controllers.declaration.ConsigneeDetailsController.displayPage(mode: models.Mode ?= models.Mode.Normal)

POST        /consignee-details                   controllers.declaration.ConsigneeDetailsController.saveAddress(mode: models.Mode ?= models.Mode.Normal)

# Carrier details

GET         /carrier-details                     controllers.declaration.CarrierDetailsController.displayPage(mode: models.Mode ?= models.Mode.Normal)

POST        /carrier-details                     controllers.declaration.CarrierDetailsController.saveAddress(mode: models.Mode ?= models.Mode.Normal)

# Declaration other parties

GET         /other-parties-involved              controllers.declaration.DeclarationAdditionalActorsController.displayPage(mode: models.Mode ?= models.Mode.Normal)

POST        /other-parties-involved              controllers.declaration.DeclarationAdditionalActorsController.saveForm(mode: models.Mode ?= models.Mode.Normal)

# Declaration holder of authorisation

GET         /holder-of-authorisation             controllers.declaration.DeclarationHolderController.displayPage(mode: models.Mode ?= models.Mode.Normal)

POST        /holder-of-authorisation             controllers.declaration.DeclarationHolderController.submitHoldersOfAuthorisation(mode: models.Mode ?= models.Mode.Normal)

# Destination countries

GET         /origination-country                 controllers.declaration.OriginationCountryController.displayPage(mode: models.Mode ?= models.Mode.Normal)

POST        /origination-country                 controllers.declaration.OriginationCountryController.submit(mode: models.Mode ?= models.Mode.Normal)

GET         /destination-country                 controllers.declaration.DestinationCountryController.displayPage(mode: models.Mode ?= models.Mode.Normal)

POST        /destination-country                 controllers.declaration.DestinationCountryController.submit(mode: models.Mode ?= models.Mode.Normal)

GET         /country-of-routing                  controllers.declaration.RoutingCountriesController.displayRoutingQuestion(mode: models.Mode ?= models.Mode.Normal, fastForward: Boolean ?= true)

POST        /country-of-routing                  controllers.declaration.RoutingCountriesController.submitRoutingAnswer(mode: models.Mode ?= models.Mode.Normal)

GET         /countries-of-routing                controllers.declaration.RoutingCountriesController.displayRoutingCountry(mode: models.Mode ?= models.Mode.Normal)

POST        /countries-of-routing                controllers.declaration.RoutingCountriesController.submitRoutingCountry(mode: models.Mode ?= models.Mode.Normal)

GET         /countries-summary                   controllers.declaration.RoutingCountriesSummaryController.displayPage(mode: models.Mode ?= models.Mode.Normal)

POST        /countries-summary                   controllers.declaration.RoutingCountriesSummaryController.submit(mode: models.Mode ?= models.Mode.Normal)

GET         /country-of-routing/:code/remove     controllers.declaration.RoutingCountriesSummaryController.displayRemoveCountryPage(mode: models.Mode ?= models.Mode.Normal, code: String)

POST        /country-of-routing/:code/remove     controllers.declaration.RoutingCountriesSummaryController.submitRemoveCountry(mode: models.Mode ?= models.Mode.Normal, code: String)

GET         /country-of-routing/:code/change     controllers.declaration.RoutingCountriesSummaryController.displayChangeCountryPage(mode: models.Mode ?= models.Mode.Normal, code: String)

POST        /country-of-routing/:code/change     controllers.declaration.RoutingCountriesSummaryController.submitChangeCountry(mode: models.Mode ?= models.Mode.Normal, code: String)

# Location of goods

GET         /location-of-goods                   controllers.declaration.LocationController.displayPage(mode: models.Mode ?= models.Mode.Normal)

POST        /location-of-goods                   controllers.declaration.LocationController.saveLocation(mode: models.Mode ?= models.Mode.Normal)

# Identification of a Warehouse

GET         /warehouse-details            controllers.declaration.WarehouseIdentificationController.displayPage(mode: models.Mode ?= models.Mode.Normal)

POST        /warehouse-details           controllers.declaration.WarehouseIdentificationController.saveIdentificationNumber(mode: models.Mode ?= models.Mode.Normal)

# Supervising Customs Office

GET         /supervising-customs-office          controllers.declaration.SupervisingCustomsOfficeController.displayPage(mode: models.Mode ?= models.Mode.Normal)

POST        /supervising-customs-office          controllers.declaration.SupervisingCustomsOfficeController.submit(mode: models.Mode ?= models.Mode.Normal)

# Inland Transport Details

GET         /inland-transport-details            controllers.declaration.InlandTransportDetailsController.displayPage(mode: models.Mode ?= models.Mode.Normal)

POST        /inland-transport-details            controllers.declaration.InlandTransportDetailsController.submit(mode: models.Mode ?= models.Mode.Normal)

# Office of exit

GET         /office-of-exit                      controllers.declaration.OfficeOfExitController.displayPage(mode: models.Mode ?= models.Mode.Normal)

POST        /office-of-exit                      controllers.declaration.OfficeOfExitController.saveOffice(mode: models.Mode ?= models.Mode.Normal)

# Total number of items

GET         /total-numbers-of-items              controllers.declaration.TotalNumberOfItemsController.displayPage(mode: models.Mode ?= models.Mode.Normal)

POST        /total-numbers-of-items              controllers.declaration.TotalNumberOfItemsController.saveNoOfItems(mode: models.Mode ?= models.Mode.Normal)

# Total package quantity

GET         /total-package-quantity              controllers.declaration.TotalPackageQuantityController.displayPage(mode: models.Mode ?= models.Mode.Normal)

POST        /total-package-quantity              controllers.declaration.TotalPackageQuantityController.saveTotalPackageQuantity(mode: models.Mode ?= models.Mode.Normal)


# Previous documents

GET         /previous-documents                  controllers.declaration.PreviousDocumentsController.displayPage(mode: models.Mode ?= models.Mode.Normal)

POST        /previous-documents                  controllers.declaration.PreviousDocumentsController.savePreviousDocuments(mode: models.Mode ?= models.Mode.Normal)

# Transaction type

GET         /nature-of-transaction               controllers.declaration.NatureOfTransactionController.displayPage(mode: models.Mode ?= models.Mode.Normal)

POST        /nature-of-transaction               controllers.declaration.NatureOfTransactionController.saveTransactionType(mode: models.Mode ?= models.Mode.Normal)


# **** ITEMS PAGES *****

# Items Summary

GET         /export-items                        controllers.declaration.ItemsSummaryController.displayPage(mode: models.Mode ?= models.Mode.Normal)

POST        /export-items                        controllers.declaration.ItemsSummaryController.submit(mode: models.Mode ?= models.Mode.Normal)

GET         /export-items/:itemId/remove         controllers.declaration.ItemsSummaryController.removeItem(mode: models.Mode ?= models.Mode.Normal, itemId)

# Procedure codes

GET         /items/:itemId/procedure-codes        controllers.declaration.ProcedureCodesController.displayPage(mode: models.Mode ?= models.Mode.Normal, itemId)

POST        /items/:itemId/procedure-codes        controllers.declaration.ProcedureCodesController.submitProcedureCodes(mode: models.Mode ?= models.Mode.Normal, itemId)

# Fiscal Information

GET          /items/:itemId/fiscal-information    controllers.declaration.FiscalInformationController.displayPage(mode: models.Mode ?= models.Mode.Normal, itemId, fastForward: Boolean ?= false)

POST         /items/:itemId/fiscal-information   controllers.declaration.FiscalInformationController.saveFiscalInformation(mode: models.Mode ?= models.Mode.Normal, itemId)


# Additional Fiscal References

GET         /items/:itemId/additional-fiscal-references             controllers.declaration.AdditionalFiscalReferencesController.displayPage(mode: models.Mode ?= models.Mode.Normal, itemId)

POST        /items/:itemId/additional-fiscal-references             controllers.declaration.AdditionalFiscalReferencesController.saveReferences(mode: models.Mode ?= models.Mode.Normal, itemId)

POST        /items/:itemId/additional-fiscal-references/:reference  controllers.declaration.AdditionalFiscalReferencesController.removeReference(mode: models.Mode ?= models.Mode.Normal, itemId, reference)

# Commodity Details

GET         /items/:itemId/commodity-details                   controllers.declaration.CommodityDetailsController.displayPage(mode: models.Mode ?= models.Mode.Normal, itemId)

POST        /items/:itemId/commodity-details                   controllers.declaration.CommodityDetailsController.submitForm(mode: models.Mode ?= models.Mode.Normal, itemId)

# UN Dangerous Goods Code

GET         /items/:itemId/un-dangerous-goods-code             controllers.declaration.UNDangerousGoodsCodeController.displayPage(mode: models.Mode ?= models.Mode.Normal, itemId)

POST        /items/:itemId/un-dangerous-goods-code             controllers.declaration.UNDangerousGoodsCodeController.submitForm(mode: models.Mode ?= models.Mode.Normal, itemId)

# CUS Code

GET         /items/:itemId/cus-code                            controllers.declaration.CusCodeController.displayPage(mode: models.Mode ?= models.Mode.Normal, itemId)

POST        /items/:itemId/cus-code                            controllers.declaration.CusCodeController.submitForm(mode: models.Mode ?= models.Mode.Normal, itemId)

# TARIC Code

GET         /items/:itemId/taric-codes                         controllers.declaration.TaricCodeController.displayPage(mode: models.Mode ?= models.Mode.Normal, itemId)

POST        /items/:itemId/taric-codes                         controllers.declaration.TaricCodeController.submitForm(mode: models.Mode ?= models.Mode.Normal, itemId)

# NACT Code

GET         /items/:itemId/nact-codes                          controllers.declaration.NactCodeController.displayPage(mode: models.Mode ?= models.Mode.Normal, itemId)

POST        /items/:itemId/nact-codes                          controllers.declaration.NactCodeController.submitForm(mode: models.Mode ?= models.Mode.Normal, itemId)

# Statistical Value

GET         /items/:itemId/statistical-value                   controllers.declaration.StatisticalValueController.displayPage(mode: models.Mode ?= models.Mode.Normal, itemId)

POST        /items/:itemId/statistical-value                   controllers.declaration.StatisticalValueController.submitItemType(mode: models.Mode ?= models.Mode.Normal, itemId)

# Package Information

GET         /items/:itemId/package-information                 controllers.declaration.PackageInformationController.displayPage(mode: models.Mode ?= models.Mode.Normal, itemId)

POST        /items/:itemId/package-information                 controllers.declaration.PackageInformationController.submitForm(mode: models.Mode ?= models.Mode.Normal, itemId)


# Commodity Measure Information

GET          /items/:itemId/commodity-measure                   controllers.declaration.CommodityMeasureController.displayPage(mode: models.Mode ?= models.Mode.Normal, itemId)

POST         /items/:itemId/commodity-measure                   controllers.declaration.CommodityMeasureController.submitForm(mode: models.Mode ?= models.Mode.Normal, itemId)

# Additional Information Request

GET          /items/:itemId/additional-information-required     controllers.declaration.AdditionalInformationRequiredController.displayPage(mode:models.Mode ?= models.Mode.Normal, itemId)

POST        /items/:itemId/additional-information-required       controllers.declaration.AdditionalInformationRequiredController.submitForm(mode: models.Mode ?= models.Mode.Normal)

# Additional information

GET         /items/:itemId/additional-information              controllers.declaration.AdditionalInformationController.displayPage(mode: models.Mode ?= models.Mode.Normal, itemId)

POST        /items/:itemId/additional-information              controllers.declaration.AdditionalInformationController.saveAdditionalInfo(mode: models.Mode ?= models.Mode.Normal, itemId)

# Add Documents

GET          /items/:itemId/add-document                        controllers.declaration.DocumentsProducedController.displayPage(mode: models.Mode ?= models.Mode.Normal, itemId)

POST         /items/:itemId/add-document                        controllers.declaration.DocumentsProducedController.saveForm(mode: models.Mode ?= models.Mode.Normal, itemId)

# **** END OF ITEM PAGES ****

GET         /transport-leaving-the-border       controllers.declaration.TransportLeavingTheBorderController.displayPage(mode: models.Mode ?= models.Mode.Normal)

POST        /transport-leaving-the-border       controllers.declaration.TransportLeavingTheBorderController.submitForm(mode: models.Mode ?= models.Mode.Normal)

# Departure Transport

GET         /departure-transport                    controllers.declaration.DepartureTransportController.displayPage(mode: models.Mode ?= models.Mode.Normal)

POST        /departure-transport                    controllers.declaration.DepartureTransportController.submitForm(mode: models.Mode ?= models.Mode.Normal)

# Border Transport

GET         /border-transport                   controllers.declaration.BorderTransportController.displayPage(mode: models.Mode ?= models.Mode.Normal)

POST        /border-transport                   controllers.declaration.BorderTransportController.submitForm(mode: models.Mode ?= models.Mode.Normal)

# Transport Payment

GET         /transport-payment                   controllers.declaration.TransportPaymentController.displayPage(mode: models.Mode ?= models.Mode.Normal)

POST        /transport-payment                   controllers.declaration.TransportPaymentController.submitForm(mode: models.Mode ?= models.Mode.Normal)

# Transport Containers & Seals

GET         /containers                          controllers.declaration.TransportContainerController.displayContainerSummary(mode: models.Mode ?= models.Mode.Normal)

POST        /containers                          controllers.declaration.TransportContainerController.submitSummaryAction(mode: models.Mode ?= models.Mode.Normal)

GET         /container                           controllers.declaration.TransportContainerController.displayAddContainer(mode: models.Mode ?= models.Mode.Normal)

POST        /container                           controllers.declaration.TransportContainerController.submitAddContainer(mode: models.Mode ?= models.Mode.Normal)

GET         /containers/:containerId/remove      controllers.declaration.TransportContainerController.displayContainerRemove(mode: models.Mode ?= models.Mode.Normal, containerId)

POST        /containers/:containerId/remove      controllers.declaration.TransportContainerController.submitContainerRemove(mode: models.Mode ?= models.Mode.Normal, containerId)

GET         /containers/:containerId/seals       controllers.declaration.SealController.displaySealSummary(mode: models.Mode ?= models.Mode.Normal, containerId)

POST        /containers/:containerId/seals       controllers.declaration.SealController.submitSummaryAction(mode: models.Mode ?= models.Mode.Normal, containerId)

GET         /containers/:containerId/add-seal    controllers.declaration.SealController.displayAddSeal(mode: models.Mode ?= models.Mode.Normal, containerId)

POST        /containers/:containerId/add-seal    controllers.declaration.SealController.submitAddSeal(mode: models.Mode ?= models.Mode.Normal, containerId)

GET         /containers/:containerId/remove-seal/:sealId    controllers.declaration.SealController.displaySealRemove(mode: models.Mode ?= models.Mode.Normal, containerId, sealId)

POST        /containers/:containerId/remove-seal/:sealId    controllers.declaration.SealController.submitSealRemove(mode: models.Mode ?= models.Mode.Normal, containerId, sealId)

# Summary

GET         /summary                             controllers.declaration.SummaryController.displayPage(mode: models.Mode = models.Mode.Normal)

GET         /amend-summary                       controllers.declaration.SummaryController.displayPage(mode: models.Mode = models.Mode.Amend)

GET         /saved-summary                       controllers.declaration.SummaryController.displayPage(mode: models.Mode = models.Mode.Draft)

POST        /summary                             controllers.declaration.SummaryController.submitDeclaration()

# Confirmation

GET         /confirmation                        controllers.declaration.ConfirmationController.displaySubmissionConfirmation()

GET         /draft-saved                         controllers.declaration.ConfirmationController.displayDraftConfirmation()

GET         /ead/:mrn                            controllers.pdf.EADController.generatePdf(mrn)