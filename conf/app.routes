->          /declaration                                   declaration.Routes

# microservice specific routes

GET         /assets/*file                                  controllers.Assets.versioned(path="/public", file: Asset)

# Kickout pages

GET         /unauthorised                                  controllers.UnauthorisedController.onPageLoad(unauthorisedReason: models.UnauthorisedReason)
GET         /you-cannot-use-service                        controllers.UnauthorisedController.onAgentKickOut(unauthorisedReason: models.UnauthorisedReason)

# Unverified/Undeclared Email

GET         /unverified-email                              controllers.UnverifiedEmailController.informUserUnverified
GET         /undeliverable-email                           controllers.UnverifiedEmailController.informUserUndeliverable

# File Upload

GET         /file-upload                                   controllers.FileUploadController.startFileUpload(mrn: String)

# Secure Messaging
GET         /messages                                      controllers.SecureMessagingController.displayInbox
GET         /conversation/:client/:conversationId          controllers.SecureMessagingController.displayConversation(client, conversationId)
+ nocsrf
POST        /conversation/:client/:conversationId          controllers.SecureMessagingController.submitReply(client, conversationId)
GET         /conversation/:client/:conversationId/result   controllers.SecureMessagingController.displayReplyResult(client, conversationId)

# Notifications

GET         /submissions/:id/rejected-notifications        controllers.RejectedNotificationsController.displayPage(id: String)
GET         /submissions/unaccepted-amendment/:actionId    controllers.RejectedNotificationsController.displayPageOnUnacceptedAmendment(actionId: String, draftDeclarationId: Option[String] ?= None)

# Dashboard

GET         /dashboard                                     controllers.DashboardController.displayPage

# Submissions

GET         /submissions/:id/information                   controllers.DeclarationDetailsController.displayPage(id: String)
GET         /submissions/:id/unavailable-actions           controllers.DeclarationDetailsController.unavailableActions(id: String)

GET         /submissions/:id/view                          controllers.SubmissionsController.viewDeclaration(id: String)

GET         /submissions/:id                               controllers.SubmissionsController.amend(id: String, isAmendment: Boolean)

GET         /submissions/:id/:pattern/:messageKey          controllers.SubmissionsController.amendErrors(id: String, pattern: String, messageKey: String, isAmendment: Boolean, url: RedirectUrl)

GET         /ead-print-view/:mrn                           controllers.EADController.generateDocument(mrn)

# Cancel declaration

GET         /cancel-declaration                            controllers.CancelDeclarationController.displayPage
POST        /cancel-declaration                            controllers.CancelDeclarationController.onSubmit

# Copy declaration

GET         /copy-declaration/:id                          controllers.CopyDeclarationController.redirectToReceiveJourneyRequest(id: String)
GET         /copy-declaration                              controllers.CopyDeclarationController.displayPage
POST        /copy-declaration                              controllers.CopyDeclarationController.submitPage

# Cancellation Result

GET         /cancellation-holding                          controllers.CancellationResultController.displayHoldingPage
GET         /cancellation-result                           controllers.CancellationResultController.displayResultPage

# Draft declarations

GET         /saved-declarations                            controllers.DraftDeclarationController.displayDeclarations(page: Int ?= 1)

GET         /saved-declarations/:id                        controllers.DraftDeclarationController.displayDeclaration(id: String)

GET         /saved-declarations/:id/remove                 controllers.RemoveDraftDeclarationController.displayPage(id: String)
POST        /saved-declarations/:id/remove                 controllers.RemoveDraftDeclarationController.removeDeclaration(id: String)

# Root Url

GET         /                                              controllers.RootController.displayPage

# Choice Page

GET         /choice                                        controllers.ChoiceController.displayPage

# Sign out

GET         /sign-out                                      controllers.SignOutController.signOut(signOutReason: models.SignOutReason)

GET         /we-signed-you-out                             controllers.SignOutController.sessionTimeoutSignedOut
GET         /you-have-signed-out                           controllers.SignOutController.userSignedOut

# Guidance pages

GET         /entry                                         controllers.GuidanceController.entry
GET         /complete-declaration                          controllers.GuidanceController.completeDeclaration
GET         /send-by-roro                                  controllers.GuidanceController.sendByRoro

# Language controller

GET        /language/:lang                                 controllers.LanguageSwitchController.switchToLanguage(lang: String)

# HMRC Frontend Static Assets
->          /hmrc-frontend                                 hmrcfrontend.Routes
