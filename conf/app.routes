->          /declaration                                   declaration.Routes

# HMRC Frontend Static Assets
->          /hmrc-frontend                                 hmrcfrontend.Routes

# microservice specific routes
GET         /assets/*file                                  controllers.Assets.versioned(path="/public", file: Asset)

# Root Url
GET         /                                              controllers.general.RootController.displayPage

# Choice Page
GET         /choice                                        controllers.ChoiceController.displayPage

# Dashboard
GET         /dashboard                                     controllers.DashboardController.displayPage

# File Upload
GET         /file-upload                                   controllers.FileUploadController.startFileUpload(mrn: String)

# Draft declarations

GET         /saved-declarations                            controllers.SavedDeclarationsController.displayDeclarations(page: Int ?= 1)
GET         /saved-declarations/:id                        controllers.SavedDeclarationsController.displayDeclaration(id: String)

GET         /saved-declarations/:id/remove                 controllers.drafts.RemoveDraftDeclarationController.displayPage(id: String)
POST        /saved-declarations/:id/remove                 controllers.drafts.RemoveDraftDeclarationController.removeDeclaration(id: String)

GET         /draft-saved                                   controllers.drafts.ExitAndCompleteLaterController.displayPage

# Sign out
GET         /sign-out                                      controllers.general.SignOutController.signOut(signOutReason: models.SignOutReason)
GET         /we-signed-you-out                             controllers.general.SignOutController.sessionTimeoutSignedOut
GET         /you-have-signed-out                           controllers.general.SignOutController.userSignedOut

# Language controller
GET        /language/:lang                                 controllers.general.LanguageSwitchController.switchToLanguage(lang: String)

# Kickout pages
GET         /unauthorised                                  controllers.general.UnauthorisedController.onPageLoad(unauthorisedReason: models.UnauthorisedReason)
GET         /you-cannot-use-service                        controllers.general.UnauthorisedController.onAgentKickOut(unauthorisedReason: models.UnauthorisedReason)

# Unverified/Undeclared Email
GET         /unverified-email                              controllers.general.UnverifiedEmailController.informUserUnverified
GET         /undeliverable-email                           controllers.general.UnverifiedEmailController.informUserUndeliverable

# Timeline

GET         /submissions/:id/view                          controllers.timeline.SubmissionsController.viewDeclaration(id: String)

GET         /submissions/:id/information                   controllers.timeline.DeclarationDetailsController.displayPage(id: String)
GET         /submissions/:id/unavailable-actions           controllers.timeline.DeclarationDetailsController.unavailableActions(id: String)

GET         /submissions/:id                               controllers.timeline.SubmissionsController.amend(id: String, isAmendment: Boolean)

GET         /submissions/:id/:pattern/:messageKey          controllers.timeline.SubmissionsController.amendErrors(id: String, pattern: String, messageKey: String, isAmendment: Boolean, url: RedirectUrl)

GET         /ead-print-view/:mrn                           controllers.timeline.EADController.generateDocument(mrn)

GET         /cancel-declaration                            controllers.timeline.CancelDeclarationController.displayPage
POST        /cancel-declaration                            controllers.timeline.CancelDeclarationController.onSubmit

GET         /copy-declaration/:id                          controllers.timeline.CopyDeclarationController.redirectToReceiveJourneyRequest(id: String)
GET         /copy-declaration                              controllers.timeline.CopyDeclarationController.displayPage
POST        /copy-declaration                              controllers.timeline.CopyDeclarationController.submitPage

GET         /cancellation-holding                          controllers.timeline.CancellationResultController.displayHoldingPage
GET         /cancellation-result                           controllers.timeline.CancellationResultController.displayResultPage

# Timeline => Rejected notifications

GET         /submissions/:id/rejected-notifications        controllers.timeline.RejectedNotificationsController.displayPage(id: String)
GET         /submissions/unaccepted-amendment/:actionId    controllers.timeline.RejectedNotificationsController.displayPageOnUnacceptedAmendment(actionId: String, draftDeclarationId: Option[String] ?= None)
